#############################
## GitHub Actions CI Tests ##
#############################
#
# This can be kicked off manually in the Actions tab of GitHub
# It will also run nightly at 2pm
# It will run on any pull request, except non-code changes
# (images, markdown files, )
#
name: CI

on:
  workflow_dispatch:
  schedule:
    # 2am each night
    - cron: '00 2 * * *'
  # Don't use pull_request_target here. See:
  # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
  pull_request:
  push:
    branches:
      - main
  merge_group:
    # Merge Queue checks requested. This feature is still in beta
    # from Github and so may need updating later.
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#merge_group
    types: [checks_requested]

jobs:

  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        job:
          [
            "linting",
            "doclinting",
            "docbuild",
            "yamllint",
            "mypy",
            "mypyc",
            "doctests",
          ]
    name: ${{ matrix.job }} tests
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: pip install tox
    - name: Run the tests
      run: tox -e ${{ matrix.job }}

  # Test with coverage tracking on most recent python (py313).
  python-version-tests:
    name: Python Tests
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/ci-test-python.yml
    with:
      python-version: "3.13"
      coverage: true
    secrets:
      gh_token: ${{ secrets.github_token }}

  dbt-tests:
    name: dbt Plugin Tests
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/ci-test-dbt.yml
    with:
      python-version: "3.13"
      dbt-version: "dbt190"
      coverage: true
    secrets:
      gh_token: ${{ secrets.github_token }}

  ymlchecks:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install dependencies
      run: |
        pip install -r requirements_dev.txt
        pip install -e .
    - name: Generate the YAML files
      run: |
        python test/generate_parse_fixture_yml.py
    - name: Test the generated YAML files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          git diff
          echo "Generated YAML files do not match branch."
          echo "Please run the following command to generate these:"
          echo "  python test/generate_parse_fixture_yml.py"
          exit 1
        fi

  examples:
    runs-on: ubuntu-latest
    name: example tests
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    - name: Install dependencies
      run: |
        pip install -e .
        pip install tqdm
    - name: Test the example files
      run: |
        for file in examples/*
        do
          echo "Running $file"
          python "$file"
        done
